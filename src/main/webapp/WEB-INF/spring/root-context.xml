<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	
	<property name="driverClassName" 
			  value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
	<property name="url" value="jdbc:log4jdbc:mysql://127.0.0.1:3306/tripster?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf8"></property>    
	<property name="username" value="bitNarae"></property>
	<property name="password" value="1234"></property>
	</bean>	
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
 	
 	<property name="dataSource" ref="dataSource" />	
 	<property name="configLocation" value="classpath:/mybatis-config.xml"></property>
 	<!-- mappers 폴더 아래에 있는 Mapper.xml로 끝나는 파일 인식 -->
 	<property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml"></property>			
	</bean>
	
	<!-- db연결과 종료에 관련된 SqlSessionTemplate -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
  	<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
	</bean>
	
	<!-- persistence의 @repository 인식 -->
	<context:component-scan base-package="com.tripster.persistence"></context:component-scan>
	<!-- service의 @service 인식 -->
	<context:component-scan base-package="com.tripster.service"></context:component-scan>
	
</beans>
